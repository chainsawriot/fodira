#!/usr/bin/env Rscript

'Fodira RSS Scraper

Usage:
  rss_link_grab <input> [<output>] [--verbose]
  rss_link_grab (-h | --help)
  rss_link_grab (-v | --version)

Options:
  -h --help     Show this screen.
  -v --version     Show version.
  --verbose     Display messages.

' -> doc

args <- docopt::docopt(doc, version = 'Fodira RSS Scraper 0.0.2')

library(fodira)

input_filename <- args$`<input>`
output_filename <- args$`<output>`
verbose <- args$verbose

if (!verbose) {
    suppressMessages(input <- rio::import(input_filename))
} else {
    input <- rio::import(input_filename)
}

.detect_atom <- function(x) {
    any(grepl("^entry", colnames(x)))
}

## entry_last_updated -> "item_pub_date"
## entry_title -> "item_title"
## entry_url -> "item_link"
## entry_summary -> "item_description"
.convert_atom <- function(x) {
    dplyr::rename(x, item_title = `entry_title`, item_link = `entry_url`, item_pub_date = `entry_last_updated`, item_description = `entry_summary`)
}

.silent_parse <- function(url, id = NA, verbose = FALSE) {
    if (verbose) {
        message(url)
    }
    suppressMessages(res <- tidyRSS::tidyfeed(url))
    res$id <- id
    res$url <- url
    if (.detect_atom(res)) {
        res <- .convert_atom(res)
    }
    if (!"item_pub_date" %in% colnames(res)) {
        res$item_pub_date <- NA
    }
    return(res)
}

res <- purrr::map2(input$url, input$page, purrr::safely(.silent_parse), verbose = verbose)

## input$url[purrr::map_lgl(res, ~!is.null(.$error))]

## res %>% purrr::map("error")

## input$url[19]

## res %>% purrr::discard(~!is.null(.$error)) %>% purrr::map("result") %>%  purrr::discard(~"item_pub_date" %in% colnames(.)) -> error_stuff

res %>% purrr::discard(~!is.null(.$error)) %>% purrr::map("result") %>% purrr::map(~dplyr::select(., dplyr::any_of(c("id", "item_link", "item_title", "item_pub_date", "item_description")))) %>% dplyr::bind_rows() -> valid_links

valid_links %>% dplyr::rename(pub = `id`, link = `item_link`, pubdate = `item_pub_date`, title = `item_title`, description = `item_description`) %>%
    fodira::harmonize_output() -> output

if (!is.null(output_filename)) {
    saveRDS(output, output_filename)
} else {
    output
}
