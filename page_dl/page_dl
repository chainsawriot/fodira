#!/usr/bin/env Rscript

library(magrittr)
args <- commandArgs(trailingOnly=TRUE)

USUAL_SQL <- "SELECT link FROM articles where htmlfile is null and (pubdate > '2021-12-30' or pubdate is null) using sample 30"

SAFE_SQL <- "select link from articles where pub in ('Bild', 'Tagesschau', 'Heute', 'Freitag', 'T-Online') and (pubdate > '2021-12-30' or pubdate is null) using sample 100;"

.get_urls <- function(con, sql) {
    DBI::dbGetQuery(con, sql)$link
}

if (length(args) == 0) {
    urls <- readLines(file("stdin"))
} else if (args[1] == "db") {
    db <- Sys.getenv("ARTICLE_DB")
    con <- DBI::dbConnect(duckdb::duckdb(), dbdir = db , read_only = FALSE)
    if (is.na(args[2])) {
        urls <- .get_urls(con, USUAL_SQL)
    } else if (args[2] == "safe") {
        urls <- .get_urls(con, SAFE_SQL)
    }
    DBI::dbDisconnect(con, shutdown = TRUE)
} else {
    urls <- args
}

if (Sys.getenv("ARTICLE_DIR") == "") {
    stop("Please set `ARTICLE_DIR`!")
}

## debug
## urls <- "https://www.bild.de/regional/hamburg/hamburg-aktuell/soltau-auf-dem-weg-in-den-knast-nach-dem-pinkeln-schuettelte-er-die-polizisten-a-80708066.bild.html?wtmc=ob.feed"
## Sys.setenv("ARTICLE_DIR" = "~/dev/fodira/page_dl/html")

ff_options <- list("moz:firefoxOptions" = list(args = list('--headless')))

rD <- RSelenium::rsDriver(browser = "firefox", port = sample(c(5678L, 5679L, 5680L, 5681L, 5682L), size = 1), check = FALSE, verbose = FALSE,
                          extraCapabilities = ff_options)
remDr <- rD[["client"]]
# 20s
remDr$setTimeout(type = "page load", milliseconds = 20000)

.scrape <- function(url, remDr, sleep = 1) {
    message(url)
    if (is.na(url)) {
        return(tibble::tibble(url = NA, fname = NA))
    }
    remDr$navigate(url)
    src <- remDr$getPageSource()
    url_hash <- digest::sha1(url, digits = 40)
    fname <- paste0(url_hash, "_" ,Sys.time(), ".html")
    writeLines(src[[1]], file.path(Sys.getenv("ARTICLE_DIR"), fname))
    Sys.sleep(sleep)
    return(tibble::tibble(url = url, fname = fname))
}

res <- purrr::map(urls, purrr::safely(.scrape), remDr = remDr) %>% purrr::discard(~!is.null(.$error)) %>% purrr::map("result") %>% dplyr::bind_rows()

remDr$close()
z <- rD$server$stop()

if (args[1] == "db" & nrow(res) > 0) {
    db <- Sys.getenv("ARTICLE_DB")
    con <- DBI::dbConnect(duckdb::duckdb(), dbdir = db , read_only = FALSE)
    for (i in seq_len(nrow(res))) {
        DBI::dbExecute(con, "update articles set htmlfile = ? where link = ?", list(res[i, "fname"], res[i, "url"]))
    }
    DBI::dbDisconnect(con, shutdown = TRUE)
}

res
